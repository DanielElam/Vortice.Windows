<?xml version="1.0" encoding="utf-8"?>
<config id="vortice-direct3d12" xmlns="urn:SharpGen.Config">
  <assembly>Vortice.Direct3D12</assembly>
  <namespace>Vortice.Direct3D12</namespace>
  <depends>Vortice.DXGI</depends>

  <sdk name="StdLib" />
  <sdk name="WindowsSdk" version="10.0.18362.0" />

  <include file="d3d12.h" namespace="Vortice.Direct3D12" attach="true"/>

  <!--<include file="d3d12video.h"
           namespace="Vortice.Direct3D12.Video"
           attach="true"
           output="Video" />-->

  <include file="d3d12shader.h" namespace="Vortice.Direct3D12.Shader" attach="true" output="Shader" />

  <include file="d3d12sdklayers.h" namespace="Vortice.Direct3D12.Debug" attach="true" output="Debug" />

  <extension>

    <create class="D3D12" visibility="public static" />
    <create class="ResultCode" visibility="public static" />
    <const from-macro="D3D12_ERROR_(.*)" type="SharpGen.Runtime.ResultDescriptor" cpp-type="int" name="$1" class="Vortice.Direct3D12.ResultCode" visibility="public static readonly">new SharpGen.Runtime.ResultDescriptor($1, "$3", "$0", "$2")</const>
    <define struct="Vortice.Direct3D12.CpuDescriptorHandle" sizeof="8" />
    <define struct="Vortice.Direct3D12.RaytracingInstanceDescription" sizeof="64" />
    
    <define enum="Vortice.Direct3D12.Shader" sizeof="1" />
  </extension>

  <bindings>
    <bind from="D3D12_GPU_VIRTUAL_ADDRESS" to="System.Int64" />
    <bind from="VORTICE_INT4" to="Vortice.Mathematics.Int4" />
    <bind from="VORTICE_COLOR4" to="Vortice.Mathematics.Color4" />
    <bind from="D3D12_BOX" to="Vortice.Mathematics.Box"/>
    <bind from="D3D12_VIEWPORT" to="Vortice.Mathematics.Viewport"/>
    <bind from="D3D12_CPU_DESCRIPTOR_HANDLE" to="Vortice.Direct3D12.CpuDescriptorHandle" />
    <bind from="D3D12_REGISTER_COMPONENT_MASK_FLAG" to="Vortice.Direct3D12.Shader.RegisterComponentMaskFlags" />
    <bind from="VORTICE_MATRIX3X4" to="Vortice.Direct3D12.Matrix3x4" />
    <bind from="D3D12_RAYTRACING_INSTANCE_DESC" to="Vortice.Direct3D12.RaytracingInstanceDescription" />
  </bindings>

  <naming>
    <short name="DESCRIPTOR">Descriptor</short>
    <short name="DESCRIPTORS">Descriptors</short>
    <short name="DESCRIPTION">Description</short>
    <short name="DESC">Description</short>
    <short name="TOPLEFT">TopLeft</short>
    <short name="UINT32">UInt32</short>
    <short name="UINT64">UInt64</short>
    <short name="IUNKNOWN">IUnknown</short>
    <short name="RECTANGLE">Rectangle</short>
    <short name="RECTS">Rectangles</short>
    <short name="RECT">Rectangle</short>
    <short name="POINT">Point</short>
    <short name="POINTS">Points</short>
    <short name="TRIANGLE">Triangle</short>
    <short name="TRIANGLES">Triangles</short>
    <short name="LIST">List</short>
    <short name="ADJACENCY">Adjacency</short>
    <short name="ADJ">Adjacency</short>
    <short name="STRIP">Strip</short>
    <short name="SRV">ShaderResourceView</short>
    <short name="DSV">DepthStencilView</short>
    <short name="RTV">RenderTargetView</short>
    <short name="UAVS">UnorderedAccessViews</short>
    <short name="UAV">UnorderedAccessView</short>
    <short name="TEXTURE">Texture</short>
    <short name="TEXT">Text</short>
    <short name="CUBE">Cube</short>
    <short name="TEX">Texture</short>
    <short name="1D">1D</short>
    <short name="2D">2D</short>
    <short name="3D">3D</short>
    <short name="MS">Multisampled</short>
    <short name="RW">RW</short>
    <short name="ARRAYSIZE">ArraySize</short>
    <short name="ARRAYSLICE">ArraySlice</short>
    <short name="ARRAYS">Arrays</short>
    <short name="ARRAY">Array</short>
    <short name="BUFFERS">Buffers</short>
    <short name="BUFFER">Buffer</short>
    <short name="BUFFEREX">BufferExtended</short>
    <short name="CBV">ConstantBufferView</short>
    <short name="CBUFFER">ConstantBuffer</short>
    <short name="TBUFFER">TextureBuffer</short>
    <short name="VDOV">VideoDecoderOutputView</short>
    <short name="VPIV">VideoProcessorInputView</short>
    <short name="VPOV">VideoProcessorOutputView</short>
    <short name="SUBRESOURCE">Subresource</short>
    <short name="FOOTPRINT">FootPrint</short>
    <short name="IA">InputAssembler</short>
    <short name="SRC">Source</short>
    <short name="DST">Destination</short>
    <short name="DEST">Destination</short>
    <short name="INV">Inverse</short>
    <short name="INVALID">Invalid</short>
    <!-- D3D12_MESSAGE_ID -->
    <short name="ATOMICCOPYBUFFER">AtomicCopyBuffer</short>
    <short name="ACQUIREHANDLEFORCAPTURE">AcquireHandleForCapture</short>
    <short name="INVALIDARRAY">InvalidArray</short>
    <short name="INVALIDBIND">InvalidBind</short>
    <short name="INVALIDTYPE">InvalidType</short>
    <short name="NULLPARAM">NullParam</short>
    <short name="INVALIDMAPTYPE">InvalidMapType</short>
    <short name="NOTMAPPED">NotMapped</short>
    <short name="OUTOFRANGE">OutOfRange</short>
    <short name="BLENDSTATE">BlendState</short>
    <short name="CREATEBLENDSTATE">CreateBlendState</short>
    <short name="COMMANDLIST">CommandList</short>
    <short name="GETDESC">GetDescription</short>
    <short name="ALREADYMAPPED">AlreadyMapped</short>
    <short name="DEVICEREMOVED">DeviceRemoved</short>
    <short name="INVALIDFLAGS">InvalidFlags</short>
    <short name="CREATEDEPTHSTENCILSTATE">CreateDepthStencilState</short>
    <short name="DEPTHSTENCILSTATE">DepthStencilState</short>
    <short name="INVALIDBACKFACE">InvalidBackFace</short>
    <short name="STENCILFAILOP">StencilFailOp</short>
    <short name="STENCILFUNC">StencilFunc</short>
    <short name="CHECKCRYPTOSESSIONSTATUS">CheckCryptoSessionStatus</short>
    <short name="CHECKFEATURESUPPORT">CheckFeatureSupport</short>
    <short name="CHECKFORMATSUPPORT">CheckFormatSupport</short>
    <short name="CHECKMULTISAMPLEQUALITYLEVELS">CheckMultisampleQualityLevels</short>
    <short name="CHECKVIDEODECODERDOWNSAMPLING">CheckVideoDecoderDownsampling</short>
    <short name="INVALIDCOLORSPACE">InvalidColorSpace</short>
    <short name="ZEROWIDTHHEIGHT">ZeroWidthHeight</short>
    <short name="CHECKVIDEOPROCESSORFORMATCONVERSION">CheckVideoProcessorFormatConversion</short>
    <short name="CLEARDEPTHSTENCILVIEW">ClearDepthStencilView</short>
    <short name="DENORMFLUSH">DenormFlush</short>
    <short name="READONLY">ReadOnly</short>
    <short name="INVALIDDEPTH">InvalidDepth</short>
    <short name="MISMATCHINGCLEARVALUE">MismatchingClearValue</short>
    <short name="CLEARRENDERTARGETVIEW">ClearRenderTargetView</short>
    <short name="CLEARUNORDEREDACCESSVIEW">ClearUnorderedAccessView</short>
    <short name="CREATECOMMANDLIST1">CreateCommandList1</short>
    <short name="GS">GeometryState</short>
    <short name="OM">OutputMerger</short>
    <short name="OUTOF">OutOf</short>
    <short name="BOUNDS">Bounds</short>
    <short name="CHECKCOUNTER">CheckCounter</short>
    <short name="WELLKNOWN">WellKnown</short>
    <short name="CREATECOUNTER">CreateCounter</short>
    <short name="NONEXCLUSIVE">NonExclusive</short>
    <short name="SHADERRESOURCEVIEW">ShaderResourceView</short>
    <short name="COPYBUFFERREGION">CopyBufferRegion</short>
    <short name="COPYFLAGS">CopyFlags</short>
    <short name="DSTRANGEOUTOFBOUNDS">DestionationRangeOutOfBounds</short>
    <short name="INVALIDCOPYFLAGS">InvalidCopyFlags</short>
    <short name="INVALIDSRCRESOURCEDIMENSION">InvalidSourceResourceDimension</short>
    <short name="INVALIDDSTRESOURCEDIMENSION">InvalidDestionationResourceDimension</short>
    <short name="NULLSRC">NullSource</short>
    <short name="NULLDST">NullDestination</short>
    <short name="SRCRANGEOUTOFBOUNDS">SourceRangeOutOfBounds</short>
    <short name="INVALIDLAYOUT">InvalidLayout</short>
    <short name="COPYRESOURCE">CopyResource</short>
    <short name="INVALIDDESTINATIONSTATE">InvalidDestinationState</short>
    <short name="INVALIDDSTRESOURCE">InvalidDestinationResource</short>
    <short name="INVALIDSOURCE">InvalidSource</short>
    <short name="INVALIDSOURCESTATE">InvalidSourceState</short>
    <short name="INVALIDSRCRESOURCE">InvalidSourceResource</short>
    <short name="COPYSTRUCTURECOUNT">CopyStructureCount</short>
    <short name="INVALIDOFFSET">InvalidOffset</short>
    <short name="LARGEOFFSET">LargeOffset</short>
    <short name="COPYSUBRESOURCEREGION">CopySubresourceRegion</short>
    <short name="EMPTYSOURCEBOX">EmptySourceBox</short>
    <short name="COPYTEXTUREREGION">CopyTextureRegion</short>
    <short name="COPYTILES">CopyTiles</short>
    <short name="COPYTILEMAPPINGS">CopyTileMappings</short>
    <short name="INVALIDBLENDOP">InvalidBlendOp</short>
    <short name="INVALIDBLENDOPALPHA">InvalidBlendOpAlpha</short>
    <short name="INVALIDDESTBLEND">InvalidDestionationBlend</short>
    <short name="INVALIDDESTBLENDALPHA">InvalidDestionationBlendAlpha</short>
    <short name="INVALIDLOGICOPS">InvalidLogicOps</short>
    <short name="INVALIDRENDERTARGETWRITEMASK">InvalidRenderTargetWriteMask</short>
    <short name="INVALIDSRCBLEND">InvalidSourceBlend</short>
    <short name="INVALIDSRCBLENDALPHA">InvalidSourceBlendAlpha</short>
    <short name="NULLDESC">NullDescription</short>
    <short name="AUTHENTICATEDCHANNEL">AuthenticatedChannel</short>
    <short name="CREATEBUFFER">CreateBuffer</short>
    <short name="INVALIDSTRUCTURESTRIDE">InvalidStructureStride</short>
    <short name="INVALIDUSAGE">InvalidUsage</short>
    <short name="INVALIDRESOURCE">InvalidResource</short>
    <short name="COMMANDALLOCATOR">CommandAllocator</short>
    <short name="WRITETOSUBRESOURCE">WriteToSubresource</short>
    <short name="MAKERESIDENT">MakeResident</short>
    <short name="INVALIDOBJECT">InvalidObject</short>
    <short name="INVALIDARG">InvalidArg</short>
    <short name="INVALIDDATAPOINTER">InvalidDataPointer</short>
    <short name="INVALIDHEAP">InvalidHeap</short>
    <short name="INVALIDRANGE">InvalidRange</short>
    <short name="INVALIDPRIORITY">InvalidPriority</short>
    <short name="NULLRANGE">NullRange</short>
    <short name="NULLOBJECTARRAY">NullObjectArray</short>
    <short name="TILEDRESOURCEBARRIER">TiledResourceBarrier</short>
    <short name="OFFERRELEASE">OfferRelease</short>
    <short name="OFFERRESOURCES">OfferResources</short>
    <short name="OPENEXISTINGHEAP">OpenExistingHeap</short>
    <short name="INVALIDADDRESS">InvalidAddress</short>
    <short name="INVALIDHANDLE">InvalidHandle</short>
    <short name="INVALIDVIEW">InvalidView</short>
    <short name="INVALIDSIZE">InvalidSize</short>
    <short name="INVALIDBOX">InvalidBox</short>
    <short name="INVALIDARGS">InvalidArgs</short>
    <short name="INVALIDSUBRESOURCE">InvalidSubresource</short>
    <short name="OMSETRENDERTARGETS">OutputMergerSetRenderTargets</short>
    <short name="NOTENOUGHMEMORY">NotEnoughMemory</short>
    <short name="READFROMSUBRESOURCE">ReadFromSubResource</short>
    <short name="EMPTYBOX">EmptyBox</short>
    <short name="REFLECTSHAREDPROPERTIES">ReflectSharedProperties</short>
    <short name="SAMPLEPOSITIONS">SamplePositions</short>
    <short name="SETSAMPLEPOSITIONS">SetSamplePositions</short>
    <short name="RECORDTIME">RecordTime</short>
    <short name="ASSUMEDFROMCLEAR">AssumedFromClear</short>
    <short name="ASSUMEDFROMFIRSTUSE">AssumedFromFirstUse</short>
    <short name="UPDATESUBRESOURCE">UpdateSubresource</short>
    <short name="EMPTYDESTBOX">EmptyDestinationBox</short>
    <short name="STOREPIPELINE">StorePipeline</short>
    <short name="NONAME">NoName</short>
    <short name="DUPLICATENAME">DuplicateName</short>
    <short name="SETPRIVATEDATA">SetPrivateData</short>
    <short name="CHANGINGPARAMS">ChangingParams</short>
    <short name="INVALIDFREEDATA">InvalidFreeData</short>
    <short name="INVALIDIUNKNOWN">InvalidIUnknown</short>
    <short name="SETRESIDENCYPRIORITY">SetResidencyPriority</short>
    <short name="INVALIDDSTCOORDINATES">InvalidDestinationCoordinates</short>
    <short name="INVALIDDSTDIMENSIONS">InvalidDestinationDimensions</short>
    <short name="INVALIDDSTFORMAT">InvalidDestinationFormat</short>
    <short name="INVALIDDSTOFFSET">InvalidDestinationOffset</short>
    <short name="INVALIDDSTPLACEMENT">InvalidDestinationPlacement</short>
    <short name="INVALIDDSTROWPITCH">InvalidDestinationRowPitch</short>
    <short name="INVALIDDSTSUBRESOURCE">InvalidDestinationSubresource</short>
    <short name="INVALIDSRCBOX">InvalidSourceBox</short>
    <short name="INVALIDSRCDIMENSIONS">InvalidSourceDimensions</short>
    <short name="INVALIDDSTDSPLACEDFOOTPRINTFORMAT">InvalidDestinationDisplacedFootPrintFormat</short>
    <short name="INVALIDSRCDSPLACEDFOOTPRINTFORMAT">InvalidSourceDisplacedFootPrintFormat</short>
    <short name="INVALIDSRCFORMAT">InvalidSourceFormat</short>
    <short name="INVALIDSRCOFFSET">InvalidSourceOffset</short>
    <short name="INVALIDSRCPLACEMENT">InvalidSourcePlacement</short>
    <short name="INVALIDSRCROWPITCH">InvalidSourceRowPitch</short>
    <short name="INVALIDSRCSUBRESOURCE">InvalidSourceSubresource</short>
    <short name="INVALIDCALL">InvalidCall</short>
    <short name="SRCREGIONOUTOFBOUNDS">SourceRegionOutOfBounds</short>
    <short name="UNRECOGNIZEDDSTFORMAT">UnrecognizedDestinationFormat</short>
    <short name="UNRECOGNIZEDDSTTYPE">UnrecognizedDestinationType</short>
    <short name="UNRECOGNIZEDSRCFORMAT">UnrecognizedSourceFormat</short>
    <short name="UNRECOGNIZEDSRCTYPE">UnrecognizedSourceType</short>
    <short name="CREATECOMMANDSIGNATURE">CreateCommandSignature</short>
    <short name="CREATECOMPUTESHADER">CreateComputeShader</short>
    <short name="CREATECOMPUTEPIPELINESTATE">CreateComputePipelineState</short>
    <short name="COMMANDSIGNATURE">CommandSignature</short>
    <short name="INVALIDCLASSLINKAGE">InvalidClassLinkage</short>
    <short name="INVALIDSHADERBYTECODE">InvalidShaderBytecode</short>
    <short name="CREATEDEPTHSTENCILVIEW">CreateDepthStencilView</short>
    <short name="CREATEDEVICE">CreateDevice</short>
    <short name="CREATEDOMAINSHADER">CreateDomainShader</short>
    <short name="INVALIDSHADERTYPE">InvalidShaderType</short>
    <short name="CREATEGEOMETRYSHADER">CreateGeometryShader</short>
    <short name="REATEGEOMETRYSHADERWITHSTREAMOUTPUT">CreateGeometryShaderWithStreamOutput</short>
    <short name="CREATEGRAPHICSPIPELINESTATE">CreateGraphicsPipelineState</short>
    <short name="DEPTHSTENCILVIEW">DepthStencilView</short>
    <short name="CREATEHEAP">CreateHeap</short>
    <short name="INVALIDALIGNMENT">InvalidAlignment</short>
    <short name="CREATEHULLSHADER">CreateHullShader</short>
    <short name="IMAGECOMMANDLIST">ImageCommandList</short>
    <short name="CREATEINPUTLAYOUT">CreateInputLayout</short>
    <short name="INCOMPATIBLEFORMAT">IncompatibleFormat</short>
    <short name="INVALIDFORMAT">InvalidFormat</short>
    <short name="INVALIDSLOT">InvalidSlot</short>
    <short name="INVALIDINPUTSLOTCLASS">InvalidInputSlotClass</short>
    <short name="INVALIDSLOTCLASSCHANGE">InvalidInputClassChange</short>
    <short name="INVALIDSTEPRATECHANGE">InvalidStepRateChange</short>
    <short name="DUPLICATESEMANTIC">DuplicateSemantic</short>
    <short name="NULLSEMANTIC">NullSemantic</short>
    <short name="STEPRATESLOTCLASSMISMATCH">StepRateSlotClassMissmatch</short>
    <short name="TOOMANYELEMENTS">TooManyElements</short>
    <short name="UNPARSEABLEINPUTSIGNATURE">UnparseableInputSignature</short>
    <short name="MONITOREDFENCE">MonitoredFence</short>
    <short name="PIPELINESTATE">PipelineState</short>
    <short name="CREATEPIPELINESTATE">CreatePipelineState</short>
    <short name="CREATEPIXELSHADER">CreatePixelShader</short>
    <short name="CREATEPLACEDRESOURCEONBUFFER">CreatePlacedResourceOnBuffer</short>
    <short name="CREATEQUERY">CreateQuery</short>
    <short name="CREATERASTERIZERSTATE">CreateRasterizerState</short>
    <short name="CONSERVATIVERASTERMODE">ConvervativeRasterMode</short>
    <short name="KEYEDMUTEX">KeyedMutex</short>
    <short name="WRONGSTATE">WrongState</short>
    <short name="POINTER">Pointer</short>
    <short name="POINTERS">Pointers</short>
    <short name="NOPERSPECTIVE">NoPerspective</short>
    <short name="POINTLIST">PointList</short>
    <short name="LINELIST">LineList</short>
    <short name="LINESTRIP">LineStrip</short>
    <short name="TRIANGLELIST">TriangleList</short>
    <short name="COMPUTESHADER">ComputeShader</short>
    <short name="DEPTHSTENCIL">DepthStencil</short>
    <short name="DEPTHSTENCILVIEW">DepthStencilView</short>
    <short name="DOMAINSHADER">DomainShader</short>
    <short name="GEOMETRYSHADER">GeometryShader</short>
    <short name="HULLSHADER">HullShader</short>
    <short name="MIN8FLOAT">Min8Float</short>
    <short name="MIN10FLOAT">Min10Float</short>
    <short name="MIN16FLOAT">Min16Float</short>
    <short name="MIN12INT">Min12Int</short>
    <short name="MIN16INT">Min16Int</short>
    <short name="MIN16UINT">Min16UInt</short>
    <short name="PIXELFRAGMENT">PixelFragment</short>
    <short name="PIXELSHADER">PixelShader</short>
    <short name="RENDERTARGETVIEW">RenderTargetView</short>
    <short name="SAMPLER1D">Sampler1D</short>
    <short name="SAMPLER2D">Sampler2D</short>
    <short name="SAMPLER3D">Sampler3D</short>
    <short name="SAMPLERCUBE">SamplerCube</short>
    <short name="VERTEXFRAGMENT">VertexFragment</short>
    <short name="VERTEXSHADER">VertexShader</short>
    <short name="SUBOBJECT">SubObject</short>
    <short name="WRITEBUFFERIMMEDIATE">WriteBufferImmediate</short>
  </naming>

  <mapping>
    <map enum="D3D(\d+)(.*)" name-tmp="$2" />
    <map enum-item="D3D12_RESOURCE_BINDING_TIER_(.*)" name="Tier$1"/>
    <map enum-item="D3D12_VIEW_INSTANCING_TIER(.*)" name-tmp="Tier$1"/>
    <map enum-item="D3D12_CONSERVATIVE_RASTERIZATION_TIER(.*)" name-tmp="Tier$1"/>
    <map enum-item="D3D12_CROSS_NODE_SHARING_TIER(.*)" name-tmp="Tier$1"/>
    <map enum-item="D3D12_RESOURCE_HEAP_TIER(.*)" name-tmp="Tier$1"/>
    <map enum-item="D3D12_TILED_RESOURCES_TIER(.*)" name-tmp="Tier$1"/>
    <map enum-item="D3D12_INDEX_BUFFER_STRIP_CUT_(VALUE_0x.*)" name-tmp="$1"/>
    <map enum-item="D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS" name="Constant32Bits"/>
    <map enum="D3D_ROOT_SIGNATURE_VERSION" name="RootSignatureVersion"/>
    <map enum-item="D3D_ROOT_SIGNATURE_VERSION(.*)" name-tmp="Version$1"/>
    <map enum-item="D3D12_SHADER_MIN_PRECISION_SUPPORT_(\d*)_BIT" name-tmp="Bit$1"/>
    <map enum-item="D3D12_DSV_FLAG(.*)" name-tmp="$1"/>
    <map enum-item="D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_(.*)" name-tmp="Tier$1"/>
    <map enum-item="D3D12_VIDEO_DECODE_TIER_(.*)" name="Tier$1"/>

    <map enum-item="D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE" name="UndefinedSwizzle64kb"/>
    <map enum-item="D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE" name="StandardSwizzle64kb"/>

    <!-- D3D12_AXIS_SHADING_RATE -->
    <map enum-item="D3D12_AXIS_SHADING_RATE_1X" name="Rate1x"/>
    <map enum-item="D3D12_AXIS_SHADING_RATE_2X" name="Rate2x"/>
    <map enum-item="D3D12_AXIS_SHADING_RATE_4X" name="Rate4x"/>
    <map enum-item="D3D12_DRED_VERSION_1_0" name="Version1_0"/>
    <map enum-item="D3D12_DRED_VERSION_1_1" name="Version1_1"/>

    <!-- D3D12_SHADING_RATE -->
    <map enum-item="D3D12_SHADING_RATE_1X1" name="Rate1x1"/>
    <map enum-item="D3D12_SHADING_RATE_1X2" name="Rate1x2"/>
    <map enum-item="D3D12_SHADING_RATE_2X1" name="Rate2x1"/>
    <map enum-item="D3D12_SHADING_RATE_2X2" name="Rate2x2"/>
    <map enum-item="D3D12_SHADING_RATE_2X4" name="Rate2x4"/>
    <map enum-item="D3D12_SHADING_RATE_4X2" name="Rate4x2"/>
    <map enum-item="D3D12_SHADING_RATE_4X4" name="Rate4x4"/>

    <!-- D3D12_VARIABLE_SHADING_RATE_TIER -->
    <map enum-item="D3D12_VARIABLE_SHADING_RATE_TIER_1" name="Tier1"/>
    <map enum-item="D3D12_VARIABLE_SHADING_RATE_TIER_2" name="Tier2"/>

    <map enum="D3D12_FORMAT_SUPPORT1" flags="true"/>
    <map enum="D3D12_FORMAT_SUPPORT2" flags="true"/>
    <map enum="D3D12_RESOURCE_STATES" flags="true"/>
    <!-- D3D_SHADER_MODEL -->
    <map enum="D3D_SHADER_MODEL" name="ShaderModel"/>
    <map enum-item="D3D_SHADER_MODEL_5_1" name="Model51"/>
    <map enum-item="D3D_SHADER_MODEL_6_0" name="Model60"/>
    <map enum-item="D3D_SHADER_MODEL_6_1" name="Model61"/>
    <map enum-item="D3D_SHADER_MODEL_6_2" name="Model62"/>
    <map enum-item="D3D_SHADER_MODEL_6_3" name="Model63"/>
    <map enum-item="D3D_SHADER_MODEL_6_4" name="Model64"/>
    <map enum-item="D3D_SHADER_MODEL_6_5" name="Model65"/>

    <map enum="D3D12_RLDO_FLAGS" name="ReportLiveDeviceObjectFlags" />
    <map enum-item="D3D12_HEAP_SERIALIZATION_TIER_(.*)" name="Tier$1"/>
    <map enum-item="D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_(.*)" name="Tier$1"/>
    <map enum-item="D3D12_RENDER_PASS_TIER_(.*)" name="Tier$1"/>
    <map enum-item="D3D12_RAYTRACING_TIER_(.*)" name="Tier$1"/>
    <map enum="D3D12_GPU_BASED_VALIDATION_FLAGS" flags="false"/>
    <map enum-item="D3D12_(.*)_DESCRIPTOR_HEAP$" name-tmp="$1"/>
    <map enum-item="D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES" name="Count"/>

    <map enum-item="D3D12_RAYTRACING_TIER_NOT_SUPPORTED" name="NotSupported"/>
    <map enum-item="D3D12_FEATURE_D3D12_OPTIONS" name="Options"/>
    <map enum-item="D3D12_FEATURE_D3D12_OPTIONS1" name="Options1"/>
    <map enum-item="D3D12_FEATURE_D3D12_OPTIONS2" name="Options2"/>
    <map enum-item="D3D12_FEATURE_D3D12_OPTIONS3" name="Options3"/>
    <map enum-item="D3D12_FEATURE_D3D12_OPTIONS4" name="Options4"/>
    <map enum-item="D3D12_FEATURE_D3D12_OPTIONS5" name="Options5"/>
    <map enum-item="D3D12_FEATURE_D3D12_OPTIONS6" name="Options6"/>

    <map enum="D3D12_BLEND_OP" name="BlendOperation" />
    <map enum="D3D12_COMPARISON_FUNC" name="ComparisonFunction" />
    <map enum="D3D12_STENCIL_OP" name="StencilOperation" />
    <map enum="D3D12_COLOR_WRITE_ENABLE" name="ColorWriteEnable" type="byte" flags="true"  />
    <map enum-item="D3D12_COLOR_WRITE_ENABLE(.*)" name-tmp="$1" />

    <!-- structs -->
    <map struct="D3D(\d+)(.*)" name-tmp="$2" />
    <!--<map interface="ID3D1[0-3](.+)" name-tmp="$1" />-->

    <map field=".*::(.*)DescW?" name="$1Description" />
    <map method=".*::(.*)DescW?" name="$1Description" />

    <remove struct="D3D12_MEMCPY_DEST"/>

    <map enum-item="D3D12_ROOT_PARAMETER_32BIT_CONSTANTS" name="Constant32Bits"/>
    <map enum-item="D3D12_ROOT_PARAMETER_CBV" name="ConstantBufferView"/>

    <!--Remove all fields for D3D12_RESOURCE_BARRIER_DESC as the union with pointers cannot be mapped safely in x86/x64 with C# explicit layout-->
    <remove field="D3D12_RESOURCE_BARRIER::.*"/>
    <remove field="D3D12_ROOT_PARAMETER::.*"/>
    <remove field="D3D12_ROOT_PARAMETER1::.*" />
    <remove field="D3D12_TEXTURE_COPY_LOCATION::.*" />
    <remove field="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS::.*" />
    <remove field="D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA::.*"/>

    <map field="D3D12_RESOURCE_TRANSITION_BARRIER::pResource" name="ResourcePointer" type="void" visibility="private"/>
    <map field="D3D12_RESOURCE_ALIASING_BARRIER::pResourceBefore" name="ResourceBeforePointer" type="void" visibility="private"/>
    <map field="D3D12_RESOURCE_ALIASING_BARRIER::pResourceAfter" name="ResourceAfterPointer" type="void" visibility="private"/>
    <map field="D3D12_RESOURCE_TRANSITION_BARRIER::pResource" name="ResourcePointer" type="void" visibility="private"/>
    <map field="D3D12_RESOURCE_UAV_BARRIER::pResource" name="ResourcePointer" type="void" />

    <map field="D3D12_NODE_MASK::NodeMask" name="Mask" />
    <map field="D3D12_DESCRIPTOR_HEAP_DESC::NumDescriptors" name="DescriptorCount"/>

    <map struct="D3D12_INFO_QUEUE_FILTER" name="InfoQueueFilter" native="true" struct-to-class="true" marshal="true" />

    <map method="ID3D12InfoQueue::GetMessageW" name="GetMessage" />
    <map method="ID3D12InfoQueue::GetMessageW?" visibility="internal"/>
    <map param="ID3D12InfoQueue::GetMessageW?::pMessage" type="void" attribute="in"/>
    <map method="ID3D12InfoQueue::GetStorageFilter" visibility="internal"/>
    <map param="ID3D12InfoQueue::GetStorageFilter::pFilter" type="void" attribute="in"/>
    <map method="ID3D12InfoQueue::GetRetrievalFilter" visibility="internal"/>
    <map param="ID3D12InfoQueue::GetRetrievalFilter::pFilter" type="void" attribute="in"/>

    <map enum-item="D3D12_MESSAGE_ID_(.*)" name-tmp="$1" />
    <remove enum-item="D3D12_MESSAGE_ID_MAP_INVALID_SUBRESOURCE" />
    <remove enum-item="D3D12_MESSAGE_ID_UNMAP_INVALID_SUBRESOURCE" />
    <remove enum-item="D3D12_MESSAGE_ID_D3D12_MESSAGES_END" />
    <map struct="D3D12_MESSAGE" marshal="true" new="false" marshalto="true" />
    <map field="D3D12_MESSAGE::pDescription" name="Description" visibility="public"/>
    <map field="D3D12_MESSAGE::DescriptionByteLength" visibility="internal"/>

    <map struct="D3D12_INFO_QUEUE_FILTER_DESC" name="InfoQueueFilterDescription" struct-to-class="true" marshal="true"  />
    <remove field="D3D12_INFO_QUEUE_FILTER_DESC::.*"/>

    <map struct="D3D12_ROOT_DESCRIPTOR_TABLE" struct-to-class="true" marshal="true"  />
    <remove field="D3D12_ROOT_DESCRIPTOR_TABLE::.*"/>

    <map struct="D3D12_ROOT_DESCRIPTOR_TABLE1" struct-to-class="true" marshal="true"  />
    <remove field="D3D12_ROOT_DESCRIPTOR_TABLE1::.*"/>

    <map struct="D3D12_ROOT_SIGNATURE_DESC" struct-to-class="true" marshal="true"  />
    <remove field="D3D12_ROOT_SIGNATURE_DESC::.*"/>

    <map struct="D3D12_ROOT_SIGNATURE_DESC1" struct-to-class="true" marshal="true"  />
    <remove field="D3D12_ROOT_SIGNATURE_DESC1::.*"/>

    <map struct="D3D12_VERSIONED_ROOT_SIGNATURE_DESC" struct-to-class="true" marshal="true" />
    <remove field="D3D12_VERSIONED_ROOT_SIGNATURE_DESC::.*"/>

    <map struct="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS" struct-to-class="true" marshal="true"  />
    <map field="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC::DestAccelerationStructureData" name="DestinationAccelerationStructureData" />
    
    <map field="D3D12_CLEAR_VALUE::Color" type="VORTICE_COLOR4" array="" override-native-type="true" />

    <map struct="D3D12_DEPTH_STENCILOP_DESC" name="DepthStencilOperationDescription" />

    <map struct="D3D12_SHADER_BYTECODE" name="ShaderBytecode" struct-to-class="true" marshal="true"  />
    <remove field="D3D12_SHADER_BYTECODE::.*"/>

    <map struct="D3D12_INPUT_ELEMENT_DESC" marshalto="true"/>
    <map field="D3D12_INPUT_ELEMENT_DESC::InputSlot" name="Slot" />
    <map field="D3D12_INPUT_ELEMENT_DESC::InputSlotClass" name="Classification" />

    <map struct="D3D12_INPUT_LAYOUT_DESC" name="InputLayoutDescription" struct-to-class="true" marshal="true" />
    <remove field="D3D12_INPUT_LAYOUT_DESC::.*"/>

    <map struct="D3D12_SO_DECLARATION_ENTRY" name="StreamOutputElement" marshalto="true" />

    <map struct="D3D12_STREAM_OUTPUT_DESC" name="StreamOutputDescription" struct-to-class="true" marshal="true" />
    <remove field="D3D12_STREAM_OUTPUT_DESC::.*"/>

    <map struct="D3D12_GRAPHICS_PIPELINE_STATE_DESC" name="GraphicsPipelineStateDescription" native="true" struct-to-class="true" marshal="true" />
    <remove field="D3D12_GRAPHICS_PIPELINE_STATE_DESC::.*"/>

    <map struct="D3D12_COMPUTE_PIPELINE_STATE_DESC" name="ComputePipelineStateDescription" native="true" struct-to-class="true" marshal="true" />
    <remove field="D3D12_COMPUTE_PIPELINE_STATE_DESC::.*"/>

    <map struct="D3D12_BLEND_DESC" marshalto="true"/>
    
    <map struct="D3D12_STATE_SUBOBJECT" name="StateSubObject" native="true" struct-to-class="true" marshal="true" />
    <remove field="D3D12_STATE_SUBOBJECT::.*"/>
    
    <map struct="D3D12_STATE_OBJECT_DESC" name="StateObjectDescription" struct-to-class="true" marshal="true" />
    <remove field="D3D12_STATE_OBJECT_DESC::.*"/>

    <map struct="D3D12_DXIL_LIBRARY_DESC" name="DxilLibraryDescription" struct-to-class="true" marshal="true" />
    <remove field="D3D12_DXIL_LIBRARY_DESC::.*"/>

    <map struct="D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION" name="SubObjectToExportsAssociation" struct-to-class="true" marshal="true" />
    <remove field="D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION::.*"/>

    <map struct="D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION" name="DxilSubObjectToExportsAssociation" struct-to-class="true" marshal="true" />
    <remove field="D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION::.*"/>

    <map struct="D3D12_EXISTING_COLLECTION_DESC" name="ExistingCollectionDescription" struct-to-class="true" marshal="true" />
    <remove field="D3D12_EXISTING_COLLECTION_DESC::.*"/>

    <!-- D3D12_RENDER_TARGET_BLEND_DESC struct -->
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::BlendEnable" name="IsBlendEnabled" />
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::SrcBlend" name="SourceBlend" />
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::DestBlend" name="DestinationBlend" />
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::BlendOp" name="BlendOperation" />
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::SrcBlendAlpha" name="SourceBlendAlpha" />
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::DestBlendAlpha" name="DestinationBlendAlpha" />
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::BlendOpAlpha" name="BlendOperationAlpha" />
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::LogicOpEnable" name="IsLogicOperationEnabled"/>
    <map field="D3D12_RENDER_TARGET_BLEND_DESC::RenderTargetWriteMask" type="D3D12_COLOR_WRITE_ENABLE" />

    <!-- D3D12_SAMPLER_DESC struct -->
    <map field="D3D12_SAMPLER_DESC::ComparisonFunc" name="ComparisonFunction" />
    <map field="D3D12_SAMPLER_DESC::BorderColor" type="VORTICE_COLOR4" override-native-type="true" array="0" />
    <map field="D3D12_STATIC_SAMPLER_DESC::ComparisonFunc" name="ComparisonFunction" />

    <!-- Inner argument description structs have no name, so we specify it manually -->
    <map struct="D3D12_INDIRECT_ARGUMENT_DESC_INNER_0_INNER_0" name="VertexBufferArgument"/>
    <map struct="D3D12_INDIRECT_ARGUMENT_DESC_INNER_0_INNER_1" name="ConstantArgument"/>
    <map struct="D3D12_INDIRECT_ARGUMENT_DESC_INNER_0_INNER_2" name="ConstantBufferArgument"/>
    <map struct="D3D12_INDIRECT_ARGUMENT_DESC_INNER_0_INNER_3" name="ShaderResourceViewArgument"/>
    <map struct="D3D12_INDIRECT_ARGUMENT_DESC_INNER_0_INNER_4" name="UnorderedAccessViewArgument"/>
    <move struct="D3D12_INDIRECT_ARGUMENT_DESC_INNER_(.*)" to="D3D12_INDIRECT_ARGUMENT_DESC"/>

    <map struct="D3D12_COMMAND_SIGNATURE_DESC" name="CommandSignatureDescription" struct-to-class="true" marshal="true" />
    <remove field="D3D12_COMMAND_SIGNATURE_DESC::.*"/>

    <map enum="D3D12_STATE_SUBOBJECT_TYPE" name="StateSubObjectType" />

    <map struct="D3D12_BOX" visibility="internal"/>
    <map struct="D3D12_DISCARD_REGION" visibility="internal"/>

    <!-- ID3D12Object methods -->
    <map method="ID3D12Object::GetPrivateData" visibility="public" hresult="true" check="false"/>
    <map method="ID3D12Object::SetPrivateData" visibility="public" hresult="true" check="false"/>
    <map method="ID3D12Object::SetName" property="false" visibility="private"/>

    <!-- ID3D12DeviceChild methods -->
    <map method="ID3D12DeviceChild::GetDevice" visibility="private" hresult="true" check="false"/>

    <!-- ID3D12Resource methods -->
    <map param="ID3D12Resource::Map::pReadRange" default="null"/>
    <map param="ID3D12Resource::Unmap::pWrittenRange" default="null"/>
    <map param="ID3D12Resource::Map::ppData" attribute="out" return="true"/>
    <map param="ID3D12Resource::ReadFromSubresource::pDstData" attribute="in value"/>
    <map param="ID3D12Resource::ReadFromSubresource::pSrcBox" default="null"/>

    <!-- ID3D12Resource1 methods -->
    <map method="ID3D12Resource1::GetProtectedResourceSession" visibility="private" hresult="true" check="false"/>

    <!-- ID3D12ProtectedSession methods -->
    <map method="ID3D12ProtectedSession::GetStatusFence" visibility="private" hresult="true" check="false"/>

    <!-- ID3D12Device methods -->
    <map method="ID3D12Device::CheckFeatureSupport" visibility="internal" check="false"/>
    <map method="ID3D12Device::GetDeviceRemovedReason" check="false"/>

    <map method="ID3D12Device::CreateCommittedResource" visibility="private"/>
    <!-- <map param="ID3D12Device::CreateCommittedResource::ppvResource" attribute="out" type="System.IntPtr" return="true"/>-->

    <map method="ID3D12Device::CreateCommandQueue" visibility="private"/>
    <map param="ID3D12Device::CreateCommandQueue::ppCommandQueue" attribute="out" type="ID3D12CommandQueue" return="true"/>

    <map method="ID3D12Device::CreateDescriptorHeap" visibility="private"/>
    <!-- <map param="ID3D12Device::CreateDescriptorHeap::ppvHeap" attribute="out" type="ID3D12DescriptorHeap" return="true"/>-->

    <map method="ID3D12Device::CreateCommandAllocator" visibility="private"/>
    <map param="ID3D12Device::CreateCommandAllocator::ppCommandAllocator" attribute="out" type="ID3D12CommandAllocator" return="true"/>

    <map method="ID3D12Device::CreateCommandList" visibility="private"/>
    <map param="ID3D12Device::CreateCommandList::ppCommandList" attribute="out" return="true"/>

    <map method="ID3D12Device::CreateFence" visibility="private"/>
    <map param="ID3D12Device::CreateFence::ppFence" attribute="out" type="ID3D12Fence" return="true"/>

    <map method="ID3D12Device::CreateHeap" visibility="private"/>
    <map param="ID3D12Device::CreateHeap::ppvHeap" attribute="out" type="ID3D12Heap" return="true"/>

    <map method="ID3D12Device::CreateRootSignature" visibility="private"/>
    <map param="ID3D12Device::CreateRootSignature::ppvRootSignature" attribute="out" type="ID3D12RootSignature" return="true"/>

    <map method="ID3D12Device::CreateCommandSignature" visibility="private"/>
    <map param="ID3D12Device::CreateCommandSignature::ppvCommandSignature" attribute="out" type="ID3D12CommandSignature" return="true"/>

    <map method="ID3D12Device::CreateComputePipelineState" visibility="private"/>
    <map param="ID3D12Device::CreateComputePipelineState::ppPipelineState" attribute="out" type ="ID3D12PipelineState" return="true"/>

    <map method="ID3D12Device::CreateGraphicsPipelineState" visibility="private"/>
    <map param="ID3D12Device::CreateGraphicsPipelineState::ppPipelineState" attribute="out" type ="ID3D12PipelineState" return="true"/>

    <map method="ID3D12Device::CreateQueryHeap" visibility="private"/>
    <map param="ID3D12Device::CreateQueryHeap::ppvHeap" attribute="out" type="ID3D12QueryHeap" return="true"/>

    <map method="ID3D12Device::CreatePlacedResource" visibility="private"/>
    <!--<map param="ID3D12Device::CreatePlacedResource::ppvResource" attribute="out" type="System.IntPtr" return="true"/>-->

    <map method="ID3D12Device::CreateReservedResource" visibility="private"/>
    <!--<map param="ID3D12Device::CreateReservedResource::ppvResource" attribute="out" type="System.IntPtr" return="true"/>-->

    <map method="ID3D12Device::CreateSharedHandle" visibility="private" name="CreateSharedHandlePrivate"/>
    <map param="ID3D12Device::CreateSharedHandle::pHandle" attribute="out" return="true"/>

    <map method="ID3D12Device::CreateSampler" visibility="public"/>
    <map param="ID3D12Device::CreateSampler::pDesc" attribute="in value"/>
    <map method="ID3D12Device::SetStablePowerState" property="false" />

    <map method="ID3D12Device::OpenSharedHandle" visibility="private" hresult="true" check="false"/>
    <map method="ID3D12Device::OpenSharedHandleByName" visibility="private" hresult="true" check="false"/>
    <map method="ID3D12Device::Evict" visibility="private"/>
    <map method="ID3D12Device::MakeResident" visibility="private"/>
    <map method="ID3D12Device::GetResourceAllocationInfo" visibility="private"/>

    <!-- ID3D12Device1 methods -->
    <map method="ID3D12Device1::CreatePipelineLibrary" visibility="private"/>
    <map param="ID3D12Device1::CreatePipelineLibrary::ppPipelineLibrary" attribute="out" type="ID3D12PipelineLibrary" return="true"/>

    <!-- ID3D12Device2 methods -->
    <map method="ID3D12Device2::CreatePipelineState" visibility="private"/>
    <map param="ID3D12Device2::CreatePipelineState::ppPipelineState" attribute="out" type="ID3D12PipelineState" return="true"/>

    <!-- ID3D12Device3 methods -->
    <map method="ID3D12Device3::EnqueueMakeResident" visibility="private" hresult="true" check="false"/>
    <map method="ID3D12Device3::OpenExistingHeapFromAddress" visibility="private" hresult="true" check="false"/>
    <map method="ID3D12Device3::OpenExistingHeapFromFileMapping" visibility="private" hresult="true" check="false"/>

    <!-- ID3D12Device4 methods -->
    <map method="ID3D12Device4::CreateCommandList1" visibility="private"/>
    <map param="ID3D12Device4::CreateCommandList1::ppCommandList" attribute="out" type="ID3D12GraphicsCommandList1" return="true"/>

    <map method="ID3D12Device4::CreateCommittedResource1" visibility="private"/>
    <map param="ID3D12Device4::CreateCommittedResource1::ppvResource" attribute="out" type="ID3D12Resource1" return="true"/>

    <map method="ID3D12Device4::CreateHeap1" visibility="private"/>
    <map param="ID3D12Device4::CreateHeap1::ppvHeap" attribute="out" type="ID3D12Heap1" return="true"/>

    <map method="ID3D12Device4::CreateProtectedResourceSession" visibility="private"/>
    <map param="ID3D12Device4::CreateProtectedResourceSession::ppSession" attribute="out" type="ID3D12ProtectedResourceSession" return="true"/>

    <map method="ID3D12Device4::CreateReservedResource1" visibility="private"/>
    <map param="ID3D12Device4::CreateReservedResource1::ppvResource" attribute="out" type="ID3D12Resource1" return="true"/>

    <!-- ID3D12Device5 methods -->
    <map method="ID3D12Device5::CreateMetaCommand" visibility="private"/>
    <map param="ID3D12Device5::CreateMetaCommand::ppMetaCommand" attribute="out" type="ID3D12MetaCommand" return="true"/>

    <map method="ID3D12Device5::CreateStateObject" visibility="private"/>
    <map param="ID3D12Device5::CreateStateObject::ppStateObject" attribute="out" type="ID3D12StateObject" return="true"/>
    <map param="ID3D12Device5::GetRaytracingAccelerationStructurePrebuildInfo::pInfo" attribute="out" return="true"/>

    <!-- ID3D12Debug1 -->
    <map method="ID3D12Debug1::SetEnableGPUBasedValidation" property="false" />
    <map method="ID3D12Debug1::SetEnableSynchronizedCommandQueueValidation" property="false" />

    <!-- ID3D12Debug2 -->
    <map method="ID3D12Debug2::SetGPUBasedValidationFlags" property="false" />

    <!-- ID3D12Debug3 -->
    <map method="ID3D12Debug3::SetEnableGPUBasedValidation" property="false" />
    <map method="ID3D12Debug3::SetEnableSynchronizedCommandQueueValidation" property="false" />
    <map method="ID3D12Debug3::SetGPUBasedValidationFlags" property="false" />

    <!-- ID3D12Debug3 -->
    <map method="ID3D12CommandQueue::ExecuteCommandLists"/>
    <map param="ID3D12CommandQueue::ExecuteCommandLists::ppCommandLists" type="void" />
    <map method="ID3D12CommandQueue::BeginEvent" visibility="private"/>
    <map method="ID3D12CommandQueue::SetMarker" visibility="private"/>
    <map method="ID3D12CommandQueue::UpdateTileMappings" visibility="private" hresult="true" check="false"/>

    <!-- ID3D12GraphicsCommandList -->
    <map param="ID3D12GraphicsCommandList::ResourceBarrier::pBarriers" type="void"/>
    <map method="ID3D12GraphicsCommandList::ResourceBarrier" visibility="public"/>
    <map method="ID3D12GraphicsCommandList::SetPipelineState" property="false"/>
    <map method="ID3D12GraphicsCommandList::SetComputeRootSignature" property="false"/>
    <map method="ID3D12GraphicsCommandList::SetGraphicsRootSignature" property="false"/>
    <map method="ID3D12GraphicsCommandList::BeginEvent" visibility="private"/>
    <map method="ID3D12GraphicsCommandList::SetMarker" visibility="private"/>
    <map method="ID3D12GraphicsCommandList::ClearRenderTargetView" visibility="private"/>
    <map param="ID3D12GraphicsCommandList::ClearRenderTargetView::ColorRGBA" type="VORTICE_COLOR4" override-native-type="true"/>
    <map method="ID3D12GraphicsCommandList::ClearDepthStencilView" visibility="private"/>
    <map method="ID3D12GraphicsCommandList::RSSetViewports" visibility="internal"/>
    <map param="ID3D12GraphicsCommandList::RSSetViewports::pViewports" type="void" />
    <map method="ID3D12GraphicsCommandList::RSSetScissorRects" visibility="internal"/>
    <map param="ID3D12GraphicsCommandList::RSSetScissorRects::pRects" type="void" />
    <map method="ID3D12GraphicsCommandList::IASetVertexBuffers" visibility="private" />
    <map param="ID3D12GraphicsCommandList::IASetVertexBuffers::pViews" attribute="in" type="void"/>

    <map method="ID3D12GraphicsCommandList::ClearUnorderedAccessViewFloat" visibility="private" />
    <map method="ID3D12GraphicsCommandList::ClearUnorderedAccessViewUint" visibility="private" />
    <map param="ID3D12GraphicsCommandList::ClearUnorderedAccessViewFloat::Values" type="VORTICE_COLOR4"  override-native-type="true" pointer="*" array="0" />
    <map param="ID3D12GraphicsCommandList::ClearUnorderedAccessViewFloat::pRects" attribute="in buffer optional" default="null" />
    <map param="ID3D12GraphicsCommandList::ClearUnorderedAccessViewUint::Values" type="VORTICE_INT4"  override-native-type="true" pointer="*" array="0" />
    <map param="ID3D12GraphicsCommandList::ClearUnorderedAccessViewUint::pRects" attribute="in buffer optional" default="null" />

    <map method="ID3D12GraphicsCommandList::OMSetRenderTargets" visibility="private"/>
    <map param="ID3D12GraphicsCommandList::OMSetRenderTargets::pRenderTargetDescriptors" type="void"/>
    <map param="ID3D12GraphicsCommandList::OMSetBlendFactor::BlendFactor" type="VORTICE_COLOR4" override-native-type="true" attribute="in" />

    <map method="ID3D12GraphicsCommandList::CopyTextureRegion" visibility="private" name="CopyTextureRegion_" />
    <map method="ID3D12GraphicsCommandList::DiscardResource" visibility="private" />

    <!-- ID3D12GraphicsCommandList1 -->
    <map method="ID3D12GraphicsCommandList1::ResolveSubresourceRegion" visibility="private" name="ResolveSubresourceRegion_"/>
    <map method="ID3D12GraphicsCommandList1::SetViewInstanceMask" property="false"/>
    
    <!-- ID3D12GraphicsCommandList2 -->
    <map method="ID3D12GraphicsCommandList2::WriteBufferImmediate" visibility="private" name="WriteBufferImmediate_"/>
    
    <!-- ID3D12GraphicsCommandList3 -->
    <map method="ID3D12GraphicsCommandList3::SetProtectedResourceSession" property="false"/>

    <!-- ID3D12GraphicsCommandList4 -->
    <map method="ID3D12GraphicsCommandList4::BuildRaytracingAccelerationStructure" visibility="private"/>
    <map param="ID3D12GraphicsCommandList4::DispatchRays::pDesc" attribute="in value"/>
    <map method="ID3D12GraphicsCommandList4::InitializeMetaCommand" visibility="private"/>
    <map method="ID3D12GraphicsCommandList4::ExecuteMetaCommand" visibility="private"/>
    <map method="ID3D12GraphicsCommandList4::SetPipelineState1" property="false" />

    <!-- ID3D12DescriptorHeap -->
    <map method="ID3D12DescriptorHeap::GetCPUDescriptorHandleForHeapStart" property="false" />
    <map method="ID3D12DescriptorHeap::GetGPUDescriptorHandleForHeapStart" property="false" />

    <!-- ID3D12PipelineLibrary methods -->
    <map method="ID3D12PipelineLibrary::LoadComputePipeline" visibility="private"/>
    <map param="ID3D12PipelineLibrary::LoadComputePipeline::ppPipelineState" attribute="out" type="ID3D12PipelineState" return="true"/>

    <map method="ID3D12PipelineLibrary::LoadGraphicsPipeline" visibility="private"/>
    <map param="ID3D12PipelineLibrary::LoadGraphicsPipeline::ppPipelineState" attribute="out" type="ID3D12PipelineState" return="true"/>

    <!-- ID3D12PipelineLibrary1 methods -->
    <map method="ID3D12PipelineLibrary1::LoadPipeline" visibility="private"/>
    <map param="ID3D12PipelineLibrary1::LoadPipeline::ppPipelineState" attribute="out" type="ID3D12PipelineState" return="true"/>

    <map function="D3D12.*" dll='"d3d12.dll"' group="Vortice.Direct3D12.D3D12" visibility="internal" />
    <map function="D3D12CreateDevice" check="false"/>
    <map function="D3D12GetDebugInterface" hresult="true" check="false"/>
    <map function="D3D12SerializeRootSignature" hresult="true" check="false"/>
    <map function="D3D12SerializeVersionedRootSignature" hresult="true" check="false"/>
    <map method="ID3D12CommandList::GetType" name="GetCommandListType" />

    <map struct="D3D12_CACHED_PIPELINE_STATE::pCachedBlob" name="CachedBlobPointer"/>
    <map field="D3D12_GLOBAL_ROOT_SIGNATURE::pGlobalRootSignature" name="RootSignature"/>
    <map field="D3D12_LOCAL_ROOT_SIGNATURE::pLocalRootSignature" name="RootSignature"/>


    <!-- d3d12shader -->
    <map struct="D3D12_SHADER_BUFFER_DESC" name="ConstantBufferDescription" />
    <map field="D3D12_SHADER_BUFFER_DESC::uFlags" name="Flags" type="D3D_SHADER_CBUFFER_FLAGS" />
    <map field="D3D12_SHADER_BUFFER_DESC::Variables" name="VariableCount" />

    <map struct="D3D12_SHADER_INPUT_BIND_DESC" name="InputBindingDescription" />
    <map field="D3D12_SHADER_INPUT_BIND_DESC::uFlags" name="Flags" type="D3D_SHADER_INPUT_FLAGS" />
    <map field="D3D12_SHADER_DESC::c([A-Z].*)" name="$1" />
    <map field="D3D12_SHADER_DESC::cGS(.*)" name="GeometryShader$1" />
    <map field="D3D12_SHADER_DESC::GS(.*)" name="GeometryShader$1" />
    <map field="D3D12_SHADER_DESC::HS(.*)" name="HullShader$1" />
    <map field="D3D12_SHADER_DESC::DclCount" name="DeclarationCount" />
    <map field="D3D12_SHADER_DESC::DefCount" name="DefineCount" />
    <!--<map field="D3D12_SHADER_DESC::Flags" type="D3DCOMPILE_SHADER_FLAGS" />-->

    <map struct="D3D12_SIGNATURE_PARAMETER_DESC" name="ShaderParameterDescription" />
    <map field="D3D12_SIGNATURE_PARAMETER_DESC::ReadWriteMask" type="D3D12_REGISTER_COMPONENT_MASK_FLAG" />
    <map field="D3D12_SIGNATURE_PARAMETER_DESC::Mask" name="UsageMask" type="D3D12_REGISTER_COMPONENT_MASK_FLAG" />
    <map field="D3D12_SHADER_TYPE_DESC::Columns" name="ColumnCount" />
    <map field="D3D12_SHADER_TYPE_DESC::Elements" name="ElementCount" />
    <map field="D3D12_SHADER_TYPE_DESC::Members" name="MemberCount" />
    <map field="D3D12_SHADER_TYPE_DESC::Rows" name="RowCount" />
    <map field="D3D12_SHADER_VARIABLE_DESC::uFlags" name="Flags" type="D3D_SHADER_VARIABLE_FLAGS" />

    <map method="ID3D12ShaderReflection::GetDesc" name="GetDescription" persist="true" />
    <map param="ID3D12ShaderReflection::GetInputParameterDesc::pDesc" attribute="out" return="true"/>
    <map param="ID3D12ShaderReflection::GetOutputParameterDesc::pDesc" attribute="out" return="true"/>
    <map param="ID3D12ShaderReflection::GetResourceBindingDesc::pDesc" attribute="out" return="true"/>
    <map param="ID3D12ShaderReflection::GetResourceBindingDescByName::pDesc" attribute="out" return="true"/>
    <map param="ID3D12ShaderReflection::GetPatchConstantParameterDesc::pDesc" attribute="out" return="true"/>

    <map param="ID3D12FunctionReflection::GetResourceBindingDesc::pDesc" attribute="out" return="true"/>
    <map param="ID3D12FunctionReflection::GetResourceBindingDescByName::pDesc" attribute="out" return="true"/>
    <map method="ID3D12ShaderReflectionVariable::GetType" name="GetVariableType" />
    <map param="ID3D12ShaderReflectionConstantBuffer::GetDesc::pDesc" attribute="out" />
  </mapping>
</config>
